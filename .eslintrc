---
parser: babel-eslint

env:
  browser: true
  node: true

ecmaFeatures:
  arrowFunctions: true
  binaryLiterals: false
  blockBindings: true
  classes: true
  defaultParams: true
  destructuring: true
  forOf: true
  generators: false
  modules: true
  objectLiteralComputedProperties: true
  objectLiteralDuplicateProperties: false
  objectLiteralShorthandMethods: true
  objectLiteralShorthandProperties: true
  octalLiterals: false
  regexUFlag: true
  regexYFlag: true
  restParams: true
  spread: true
  superInFunctions: false
  templateStrings: true
  unicodeCodePointEscapes: false
  globalReturn: false
  jsx: true

rules:
  ### General rules
  comma-dangle: 0
  no-console: 0
  no-debugger: 0 #In the future set to 2 to do not allow debugger;
  no-cond-assign: 2
  no-constant-condition: 2
  no-control-regex: 2
  no-dupe-args: 2
  no-dupe-keys: 2
  no-duplicate-case: 2
  no-empty-character-class: 2
  no-empty: 2
  no-ex-assign: 2
  no-extra-boolean-cast: 2
  no-extra-parens: 2
  no-extra-semi: 2
  no-func-assign: 2
  no-inner-declarations: 2
  no-invalid-regexp: 2
  no-irregular-whitespace: 2
  no-negated-in-lhs: 2
  no-obj-calls: 2
  no-regex-spaces: 2
  no-sparse-arrays: 2
  no-unreachable: 2
  use-isnan: 2
  valid-jsdoc: 2
  valid-typeof: 2
  space-unary-ops: [1, { "words": true, "nonwords": false }]
  no-unexpected-multiline: 2

  ## Best practices
  block-scoped-var: 2 #If we use let and const not sure if needed
  complexity: [2, 2]
  curly: 2 #Yes, always curly braces in functions
  dot-notation: 2 #GOOD foo.bar / BAD foo['bar']
  eqeqeq: 2 #Force triple === 
  no-caller: 2
  no-div-regex: 2
  no-else-return: 2
  no-eq-null: 2
  no-eval: 2
  no-extra-bind: 2
  no-fallthrough: 2
  no-floating-decimal: 2
  no-implied-eval: 2
  no-invalid-this: 2
  no-iterator: 2
  no-labels: 2
  no-lone-blocks: 2
  no-loop-func: 2
  no-multi-spaces: 2
  no-multi-str: 2
  no-native-reassign: 2
  no-new-func: 2
  no-new-wrappers: 2
  no-new: 2
  no-param-reassign: 2
  no-process-env: 2
  no-redeclare: 2
  no-return-assign: 2
  no-script-url: 2
  no-self-compare: 2
  no-sequences: 2
  no-throw-literal: 2
  no-unused-expressions: 2
  no-useless-call: 2
  no-useless-concat: 2
  wrap-iife: [2, "outside"]
  yoda: 2

  ## Strict Mode
  strict: [2, global]

  ## Variables
  init-declarations: [2, "never"]
  no-delete-var: 2
  no-shadow-restricted-names: 2
  no-shadow: 2
  no-undef-init: 2
  no-unused-vars: 2
  no-use-before-define: 2

  ## Node.js and CommonJS
  no-mixed-requires: 0
  callback-return: 2
  handle-callback-err: 2
  no-new-require: 2
  no-path-concat: 2
  no-process-exit: 2

  ## Stylistic Issues
  array-bracket-spacing: [2, "never"]
  brace-style: [2, "1tbs", {"allowSingleLine": false}]
  camelcase: [0, {properties: "never"}]
  comma-spacing: [2, {"before": false, "after": true}]
  comma-style: [2, first]
  computed-property-spacing: [2, "never"]
  consistent-this: [2, "self"]
  eol-last: 2
  id-length: 2
  indent: [2, 2]
  key-spacing: [2, {"beforeColon": false, "afterColon": true}]
  lines-around-comment: [2, { "beforeBlockComment": true }]
  linebreak-style: 2
  max-nested-callbacks: [2, 3]
  new-cap: 2
  new-parens: 2
  newline-after-var: [2, "always"]
  no-array-constructor: 2
  no-continue: 2
  no-inline-comments: 2
  no-lonely-if: 2
  no-mixed-spaces-and-tabs: 2
  no-multiple-empty-lines: [2, {max: 1}]
  no-nested-ternary: 2
  no-trailing-spaces: 2
  no-underscore-dangle: 2
  no-unneeded-ternary: 2
  object-curly-spacing: [2, "always"]
  one-var: [2, {"var": "always", "let": "always", "const": "never" }]  
  operator-linebreak: [2, "before", { "overrides": { "?": "after" } }]
  padded-blocks: [2, "never"]
  quote-props: [2, "as-needed", {"keywords": true}]
  quotes: [2, "single", "avoid-escape"]
  semi-spacing: [2, {"before": false, "after": true}]
  semi: [2, "always"] #Always use ; semi colons
  sort-vars: [2, { "ignoreCase": true }]
  space-after-keywords: [2, "always"]
  space-before-blocks: 2
  space-before-blocks: 2
  space-before-function-paren: 2
  space-in-parens: [2, "never"]
  space-infix-ops: 2 #GOOD 2 + 2 / BAD 2+2
  space-return-throw-case: 2
  space-unary-ops: [2, { "words": true, "nonwords": false }]
  wrap-regex: 2

  ## ECMAScript 6
  arrow-parens: 2
  arrow-spacing: 2
  constructor-super: 2
  generator-star-spacing: 2
  no-class-assign: 2
  no-const-assign: 2
  no-dupe-class-members: 2
  no-this-before-super: 2
  no-var: 2
  object-shorthand: [2, "always"]
  prefer-arrow-callback: 2
  prefer-const: 2
  prefer-spread: 2
  prefer-spread: 2
  prefer-template: 2
  require-yield: 2
